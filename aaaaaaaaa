{
  "Runtimeflow": "AdminCharge_Reserve",
  "Activity": "AdminChargeReserveActivity",
  "Methods": [
    {
      "Name": "initialize",
      "Info": [
        "Reset fetched consumers",
        "Initializing providerHandler with:",
        {
          "Customer": "326B513AB384427C8D703C9A867661C2",
          "Contract": null,
          "PriceType": "ONE_TIME",
          "Timestamp": "2019-02-14T16:27:24.442+01:00"
        },
        {
          "Prioritizing products using BasketProductOfferings": {
            "basketProductOfferings": {
              "ProductOfferingReferences": [
                {
                  "ProductOfferingId": "c3a0303f-ed1b-4640-bf92-cd7561ac2102",
                  "ProductOfferingPriceId": "c6c5135469dc867f70462c5dca978209",
                  "ProductId": null,
                  "ApopId": null
                },
                {
                  "ProductOfferingId": "c3a0303f-ed1b-4640-bf92-cd7561ac2102",
                  "ProductOfferingPriceId": "c6c5135469dc867f70462c5dca978209",
                  "ProductId": null,
                  "ApopId": null
                },
                {
                  "ProductOfferingId": "c3a0303f-ed1b-4640-bf92-cd7561ac2102",
                  "ProductOfferingPriceId": "c6c5135469dc867f70462c5dca978209",
                  "ProductId": null,
                  "ApopId": null
                },
                {
                  "ProductOfferingId": "c3a0303f-ed1b-4640-bf92-cd7561ac2102",
                  "ProductOfferingPriceId": "c6c5135469dc867f70462c5dca978209",
                  "ProductId": null,
                  "ApopId": null
                }
              ],
              "PurchaseDiscountProductOfferingReferences": [
                {
                  "ProductOfferingId": "f5c8f735-a8a2-4765-b3cc-fbf6b7365a24",
                  "ProductOfferingPriceId": "a5255c3503d47e2005153f7e781adac8",
                  "ProductId": null,
                  "ApopId": null
                }
              ]
            }
          }
        },
        {
          "Product without Product id. Product will be searched using": {
            "productOfferingId": "c3a0303f-ed1b-4640-bf92-cd7561ac2102",
            "productOfferingPriceId": "c6c5135469dc867f70462c5dca978209"
          }
        },
        {
          "Product found with": {
            "product id": null,
            "product offering id": "c3a0303f-ed1b-4640-bf92-cd7561ac2102",
            "product offering price id": "c6c5135469dc867f70462c5dca978209"
          }
        },
        {
          "Product without Product id. Product will be searched using": {
            "productOfferingId": "c3a0303f-ed1b-4640-bf92-cd7561ac2102",
            "productOfferingPriceId": "c6c5135469dc867f70462c5dca978209"
          }
        },
        {
          "Product found with": {
            "product id": null,
            "product offering id": "c3a0303f-ed1b-4640-bf92-cd7561ac2102",
            "product offering price id": "c6c5135469dc867f70462c5dca978209"
          }
        },
        {
          "Product without Product id. Product will be searched using": {
            "productOfferingId": "c3a0303f-ed1b-4640-bf92-cd7561ac2102",
            "productOfferingPriceId": "c6c5135469dc867f70462c5dca978209"
          }
        },
        {
          "Product found with": {
            "product id": null,
            "product offering id": "c3a0303f-ed1b-4640-bf92-cd7561ac2102",
            "product offering price id": "c6c5135469dc867f70462c5dca978209"
          }
        },
        {
          "Product without Product id. Product will be searched using": {
            "productOfferingId": "c3a0303f-ed1b-4640-bf92-cd7561ac2102",
            "productOfferingPriceId": "c6c5135469dc867f70462c5dca978209"
          }
        },
        {
          "Product found with": {
            "product id": null,
            "product offering id": "c3a0303f-ed1b-4640-bf92-cd7561ac2102",
            "product offering price id": "c6c5135469dc867f70462c5dca978209"
          }
        },
        {
          "Final selected products": {
            "Products selected up front": [
              "AdminChargesProductImpl
{
    ProductId = BE2E284292C542D98E55F5B80478006C
    ProductOfferingPriceId = c6c5135469dc867f70462c5dca978209
}",
              "AdminChargesProductImpl
{
    ProductId = C83974B557714ECBB3B663DB0C17D441
    ProductOfferingPriceId = c6c5135469dc867f70462c5dca978209
}",
              "AdminChargesProductImpl
{
    ProductId = 60156A83B5BD4135BFD69689DCBB5194
    ProductOfferingPriceId = c6c5135469dc867f70462c5dca978209
}",
              "AdminChargesProductImpl
{
    ProductId = 6EB3C30B3B084A2F915233BC955B7A77
    ProductOfferingPriceId = c6c5135469dc867f70462c5dca978209
}"
            ]
          }
        },
        {
          "Prioritizing products using BasketProductOfferings": {
            "basketProductOfferings": {
              "ProductOfferingReferences": [
                {
                  "ProductOfferingId": "c3a0303f-ed1b-4640-bf92-cd7561ac2102",
                  "ProductOfferingPriceId": "c6c5135469dc867f70462c5dca978209",
                  "ProductId": null,
                  "ApopId": null
                },
                {
                  "ProductOfferingId": "c3a0303f-ed1b-4640-bf92-cd7561ac2102",
                  "ProductOfferingPriceId": "c6c5135469dc867f70462c5dca978209",
                  "ProductId": null,
                  "ApopId": null
                },
                {
                  "ProductOfferingId": "c3a0303f-ed1b-4640-bf92-cd7561ac2102",
                  "ProductOfferingPriceId": "c6c5135469dc867f70462c5dca978209",
                  "ProductId": null,
                  "ApopId": null
                },
                {
                  "ProductOfferingId": "c3a0303f-ed1b-4640-bf92-cd7561ac2102",
                  "ProductOfferingPriceId": "c6c5135469dc867f70462c5dca978209",
                  "ProductId": null,
                  "ApopId": null
                }
              ],
              "PurchaseDiscountProductOfferingReferences": [
                {
                  "ProductOfferingId": "f5c8f735-a8a2-4765-b3cc-fbf6b7365a24",
                  "ProductOfferingPriceId": "a5255c3503d47e2005153f7e781adac8",
                  "ProductId": null,
                  "ApopId": null
                }
              ]
            }
          }
        },
        {
          "Product without Product id. Product will be searched using": {
            "productOfferingId": "f5c8f735-a8a2-4765-b3cc-fbf6b7365a24",
            "productOfferingPriceId": "a5255c3503d47e2005153f7e781adac8"
          }
        },
        {
          "Product found with": {
            "product id": null,
            "product offering id": "f5c8f735-a8a2-4765-b3cc-fbf6b7365a24",
            "product offering price id": "a5255c3503d47e2005153f7e781adac8"
          }
        },
        {
          "Final selected products": {
            "Products selected up front": [
              "AdminChargesProductImpl
{
    ProductId = 928BA2569E114387BD942FDCEDDD9BC9
    ProductOfferingPriceId = a5255c3503d47e2005153f7e781adac8
}"
            ]
          }
        }
      ],
      "ReturnValue": "NEXT"
    },
    {
      "Name": "reserve",
      "Info": [
        "APOP: AtomicProductOfferingPrice-e6116d30ec2bd45b28739214a1dedfac (e6116d30ec2bd45b28739214a1dedfac)",
        "
+-- Purchase fee EUN
    +-- Pay fee with EUN
        !-- Payment from BAB
        !-- Send end-user notification
              Warning, notification category not set.
              Adding NotificationCreator to PostActions: {\"PartialNotificationResult\":{\"NotificationTemplateId\":\"172353\",\"ProductId\":null,\"ProductBucketId\":null,\"BillingAccountId\":null,\"BillingAccountBucketId\":null,\"BillingAccountBucketSpecId\":null}}
              com.ericsson.bss.vre.core.treerule.TreeExecutionException: java.lang.ClassCastException: com.ericsson.bss.rm.charging.vre.tree.elements.triggers.NotificationCreator cannot be cast to com.ericsson.bss.rm.charging.vre.tree.elements.triggers.ExternalNotificationCreator
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.execute(TreeTraverser.java:64)
  at com.ericsson.bss.vre.core.treerule.TracingTreeExecutionProxy.execute(TracingTreeExecutionProxy.java:67)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.traverseElement(TreeTraverser.java:43)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeElement(TreeTraverser.java:195)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeNode(TreeTraverser.java:109)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeTreeElement(TreeTraverser.java:74)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.execute(TreeTraverser.java:56)
  at com.ericsson.bss.vre.core.treerule.TracingTreeExecutionProxy.execute(TracingTreeExecutionProxy.java:67)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.traverseElement(TreeTraverser.java:43)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeElement(TreeTraverser.java:195)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeNode(TreeTraverser.java:109)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeTreeElement(TreeTraverser.java:74)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.execute(TreeTraverser.java:56)
  at com.ericsson.bss.vre.core.treerule.TracingTreeExecutionProxy.execute(TracingTreeExecutionProxy.java:67)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.traverseElement(TreeTraverser.java:43)
  at com.ericsson.bss.vre.core.treerule.TreeRule.runRule(TreeRule.java:175)
  at com.ericsson.bss.vre.core.treerule.TreeRule.apply(TreeRule.java:103)
  at com.ericsson.bss.rm.charging.race.engine.internal.rulerunner.impl.ApopUtils.runRuleFor(ApopUtils.java:74)
  at com.ericsson.bss.rm.charging.race.engine.internal.rulerunner.impl.AdminChargeRuleRunner.runRule(AdminChargeRuleRunner.java:62)
  at com.ericsson.bss.rm.charging.race.engine.internal.AdminChargeRace.runRules(AdminChargeRace.java:136)
  at com.ericsson.bss.rm.charging.race.engine.internal.AdminChargeRace.executeAll(AdminChargeRace.java:84)
  at com.ericsson.bss.rm.charging.service.admincharge.adminchargelogic.AbstractAdminChargeStrategy.productExecuteAll(AbstractAdminChargeStrategy.java:293)
  at com.ericsson.bss.rm.charging.service.admincharge.adminchargelogic.AbstractAdminChargeStrategy.executeBaseProducts(AbstractAdminChargeStrategy.java:258)
  at com.ericsson.bss.rm.charging.service.admincharge.adminchargelogic.AbstractAdminChargeStrategy.executeRace(AbstractAdminChargeStrategy.java:171)
  at com.ericsson.bss.rm.charging.service.admincharge.activity.AdminChargeReserveActivity.reserve(AdminChargeReserveActivity.java:45)
  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  at java.lang.reflect.Method.invoke(Method.java:498)
  at com.ericsson.bss.rm.charging.rf.core.engine.internal.ExecutionObjectImpl.run(ExecutionObjectImpl.java:254)
  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
  at java.lang.Thread.run(Thread.java:748)
  Caused by: java.lang.ClassCastException: com.ericsson.bss.rm.charging.vre.tree.elements.triggers.NotificationCreator cannot be cast to com.ericsson.bss.rm.charging.vre.tree.elements.triggers.ExternalNotificationCreator
  at com.ericsson.bss.rm.charging.race.engine.internal.rulerunner.api.DefaultPostActionFromRule.<init>(DefaultPostActionFromRule.java:41)
  at com.ericsson.bss.rm.charging.race.engine.PostActionFromRule$PostActionFromRuleBuilder.build(PostActionFromRule.java:42)
  at com.ericsson.bss.rm.charging.race.engine.internal.rulerunner.impl.RaceDataSet.addPostAction(RaceDataSet.java:92)
  at com.ericsson.bss.rm.charging.vre.tree.elements.modifier.NotificationModifier.executeInternal(NotificationModifier.java:154)
  at com.ericsson.bss.rm.charging.vre.tree.elements.modifier.OptionalTreeModifier.execute(OptionalTreeModifier.java:65)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeTreeElement(TreeTraverser.java:79)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.execute(TreeTraverser.java:56)
  ... 32 more
",
        "No rule found for Billing Account 6260FA8AF7E94CFAA233762A42A72A8B with bucket id CF8AF6AD9D854E57A467E8286F2D60D6",
        "Creating  BillingAccountAsset Using Default Data Model:",
        {
          "CPOP": "c6c5135469dc867f70462c5dca978209",
          "APOP": "e6116d30ec2bd45b28739214a1dedfac",
          "BillingAccount": "6260FA8AF7E94CFAA233762A42A72A8B",
          "BillingAccountBuckets": [
            {
              "BillingAccountId": null,
              "BillingAccountBucketSpecificationId": "1da81516-4e7b-449b-a149-ccf320ea5c41",
              "BillingAccountBucketId": "CF8AF6AD9D854E57A467E8286F2D60D6"
            }
          ]
        },
        "Created Fee, ActionId: 2, Price: 10 usd, AssetId: 6260FA8AF7E94CFAA233762A42A72A8B",
        "Before rate: bucket balance for AssetId[6260FA8AF7E94CFAA233762A42A72A8B] is hard available: 1000.000000 usd and soft available: null",
        "ActionId = 2 : Total Fee: 10.000000 usd could be afforded",
        "All fees could be afforded",
        "Created bucket change of 10.000000 for ASSET_BILLING_ACCOUNT, available units considering reservations were 1000.000000, available units would now be 990.000000",
        {
          "RaceResult after execute all": {
            "ChargingIntervalPack": null,
            "AreSessionSetupFeesCharged": false,
            "AreSessionStartFeesCharged": true,
            "ActionResultPacks": {
              "SessionStartFeeActionResultPack": {
                "ActionResults": [
                  {
                    "ExecutedAction": "Fee",
                    "RatedUnits": "no rated units",
                    "ChargedUnits": "no charged units",
                    "Cost": "Cost [myBaseCost={\"Value\":10,\"Uom\":\"usd\"}, myDiscountedCost={\"Value\":10,\"Uom\":\"usd\"}]",
                    "NumberOfChargingIntervals": null,
                    "DiscountAction": null,
                    "IsAccumulator": false,
                    "PriceRatingResult": {
                      "AssetId": "6260FA8AF7E94CFAA233762A42A72A8B",
                      "ActionId": "2",
                      "PriceRatingResult": "ALL",
                      "RatingResultReason": "NO_SPECIFIC_REASON"
                    }
                  }
                ]
              }
            },
            "RatedUnits": "[]",
            "ChargedUnits": "null",
            "ResultCode": "SUCCESS",
            "RatingResultReason": "NO_SPECIFIC_REASON",
            "TimeSwitchResult": "has not hit any switch time",
            "FreeResult": null,
            "ChargingResult": null,
            "ApplyingResult": "DefaultApplyingResult [myAssetResults={ActionId=2=com.ericsson.bss.rm.charging.race.engine.internal.applying.impl.DefaultAssetResult@3fb2d1ee}]",
            "RuleRunnerResult": {
              "Apop": {
                "priceId": "e6116d30ec2bd45b28739214a1dedfac",
                "productPriceId": null,
                "name": "AtomicProductOfferingPrice-e6116d30ec2bd45b28739214a1dedfac",
                "productPriceExternalId": null
              },
              "ActionPack": {
                "SessionSetupFeePack": {
                  "PriceActions": []
                },
                "FixedPricePack": {
                  "PriceActions": [
                    {
                      "Price": "10.000000 usd",
                      "AssetId": "6260FA8AF7E94CFAA233762A42A72A8B",
                      "ImplicitBucket": null,
                      "PriceActionType": "PRICE",
                      "RuleActionTag": {
                        "PricingActionType": "PurchasePrice",
                        "PricingActionId": "be6d2e16a5ee57f893cff92e160c5691",
                        "AmountType": "GROSS"
                      },
                      "ProductType": null,
                      "ActionId": 2,
                      "ExecutedAction": "Fee"
                    }
                  ]
                },
                "LinearPricePack=": {
                  "PriceActions": []
                },
                "FixedDiscount=": null,
                "LinearDiscount=": null,
                "SessionSetupFeeDiscount=": null,
                "AdminChargeDiscount=": null,
                "ChargingIntervalPack=": {
                  "ChargingIntervals": []
                },
                "BucketOperationPack=": {
                  "BucketOperationActions": []
                },
                "NotificationPack=": {
                  "NotificationActions": []
                },
                "PostActionPack=": {
                  "PostActions": []
                }
              },
              "AssetVreIdLimitPack": {
                "AssetConditions": {},
                "AvailableUnitsConditions": {}
              },
              "AssetIdLimitPack": {
                "AssetLimits": {},
                "AvailableUnitsAssetLimits": {}
              },
              "IsApopTriggered": true,
              "IsCpopFound": true,
              "OtherPartyId": null,
              "RuleRunnerExitReason": null
            }
          }
        },
        "APOP: AtomicProductOfferingPrice-e6116d30ec2bd45b28739214a1dedfac (e6116d30ec2bd45b28739214a1dedfac)",
        "
+-- Purchase fee EUN
    +-- Pay fee with EUN
        !-- Payment from BAB
        !-- Send end-user notification
              Warning, notification category not set.
              Adding NotificationCreator to PostActions: {\"PartialNotificationResult\":{\"NotificationTemplateId\":\"172353\",\"ProductId\":null,\"ProductBucketId\":null,\"BillingAccountId\":null,\"BillingAccountBucketId\":null,\"BillingAccountBucketSpecId\":null}}
              com.ericsson.bss.vre.core.treerule.TreeExecutionException: java.lang.ClassCastException: com.ericsson.bss.rm.charging.vre.tree.elements.triggers.NotificationCreator cannot be cast to com.ericsson.bss.rm.charging.vre.tree.elements.triggers.ExternalNotificationCreator
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.execute(TreeTraverser.java:64)
  at com.ericsson.bss.vre.core.treerule.TracingTreeExecutionProxy.execute(TracingTreeExecutionProxy.java:67)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.traverseElement(TreeTraverser.java:43)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeElement(TreeTraverser.java:195)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeNode(TreeTraverser.java:109)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeTreeElement(TreeTraverser.java:74)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.execute(TreeTraverser.java:56)
  at com.ericsson.bss.vre.core.treerule.TracingTreeExecutionProxy.execute(TracingTreeExecutionProxy.java:67)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.traverseElement(TreeTraverser.java:43)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeElement(TreeTraverser.java:195)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeNode(TreeTraverser.java:109)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeTreeElement(TreeTraverser.java:74)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.execute(TreeTraverser.java:56)
  at com.ericsson.bss.vre.core.treerule.TracingTreeExecutionProxy.execute(TracingTreeExecutionProxy.java:67)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.traverseElement(TreeTraverser.java:43)
  at com.ericsson.bss.vre.core.treerule.TreeRule.runRule(TreeRule.java:175)
  at com.ericsson.bss.vre.core.treerule.TreeRule.apply(TreeRule.java:103)
  at com.ericsson.bss.rm.charging.race.engine.internal.rulerunner.impl.ApopUtils.runRuleFor(ApopUtils.java:74)
  at com.ericsson.bss.rm.charging.race.engine.internal.rulerunner.impl.AdminChargeRuleRunner.runRule(AdminChargeRuleRunner.java:62)
  at com.ericsson.bss.rm.charging.race.engine.internal.AdminChargeRace.runRules(AdminChargeRace.java:136)
  at com.ericsson.bss.rm.charging.race.engine.internal.AdminChargeRace.executeAll(AdminChargeRace.java:84)
  at com.ericsson.bss.rm.charging.service.admincharge.adminchargelogic.AbstractAdminChargeStrategy.productExecuteAll(AbstractAdminChargeStrategy.java:293)
  at com.ericsson.bss.rm.charging.service.admincharge.adminchargelogic.AbstractAdminChargeStrategy.executeBaseProducts(AbstractAdminChargeStrategy.java:258)
  at com.ericsson.bss.rm.charging.service.admincharge.adminchargelogic.AbstractAdminChargeStrategy.executeRace(AbstractAdminChargeStrategy.java:171)
  at com.ericsson.bss.rm.charging.service.admincharge.activity.AdminChargeReserveActivity.reserve(AdminChargeReserveActivity.java:45)
  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  at java.lang.reflect.Method.invoke(Method.java:498)
  at com.ericsson.bss.rm.charging.rf.core.engine.internal.ExecutionObjectImpl.run(ExecutionObjectImpl.java:254)
  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
  at java.lang.Thread.run(Thread.java:748)
  Caused by: java.lang.ClassCastException: com.ericsson.bss.rm.charging.vre.tree.elements.triggers.NotificationCreator cannot be cast to com.ericsson.bss.rm.charging.vre.tree.elements.triggers.ExternalNotificationCreator
  at com.ericsson.bss.rm.charging.race.engine.internal.rulerunner.api.DefaultPostActionFromRule.<init>(DefaultPostActionFromRule.java:41)
  at com.ericsson.bss.rm.charging.race.engine.PostActionFromRule$PostActionFromRuleBuilder.build(PostActionFromRule.java:42)
  at com.ericsson.bss.rm.charging.race.engine.internal.rulerunner.impl.RaceDataSet.addPostAction(RaceDataSet.java:92)
  at com.ericsson.bss.rm.charging.vre.tree.elements.modifier.NotificationModifier.executeInternal(NotificationModifier.java:154)
  at com.ericsson.bss.rm.charging.vre.tree.elements.modifier.OptionalTreeModifier.execute(OptionalTreeModifier.java:65)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeTreeElement(TreeTraverser.java:79)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.execute(TreeTraverser.java:56)
  ... 32 more
",
        "No rule found for Billing Account 6260FA8AF7E94CFAA233762A42A72A8B with bucket id CF8AF6AD9D854E57A467E8286F2D60D6",
        "Creating  BillingAccountAsset Using Default Data Model:",
        {
          "CPOP": "c6c5135469dc867f70462c5dca978209",
          "APOP": "e6116d30ec2bd45b28739214a1dedfac",
          "BillingAccount": "6260FA8AF7E94CFAA233762A42A72A8B",
          "BillingAccountBuckets": [
            {
              "BillingAccountId": null,
              "BillingAccountBucketSpecificationId": "1da81516-4e7b-449b-a149-ccf320ea5c41",
              "BillingAccountBucketId": "CF8AF6AD9D854E57A467E8286F2D60D6"
            }
          ]
        },
        "Created Fee, ActionId: 4, Price: 10 usd, AssetId: 6260FA8AF7E94CFAA233762A42A72A8B",
        "Before rate: bucket balance for AssetId[6260FA8AF7E94CFAA233762A42A72A8B] is hard available: 990.000000 usd and soft available: null",
        "ActionId = 4 : Total Fee: 10.000000 usd could be afforded",
        "All fees could be afforded",
        "Created bucket change of 10.000000 for ASSET_BILLING_ACCOUNT, available units considering reservations were 990.000000, available units would now be 980.000000",
        {
          "RaceResult after execute all": {
            "ChargingIntervalPack": null,
            "AreSessionSetupFeesCharged": false,
            "AreSessionStartFeesCharged": true,
            "ActionResultPacks": {
              "SessionStartFeeActionResultPack": {
                "ActionResults": [
                  {
                    "ExecutedAction": "Fee",
                    "RatedUnits": "no rated units",
                    "ChargedUnits": "no charged units",
                    "Cost": "Cost [myBaseCost={\"Value\":10,\"Uom\":\"usd\"}, myDiscountedCost={\"Value\":10,\"Uom\":\"usd\"}]",
                    "NumberOfChargingIntervals": null,
                    "DiscountAction": null,
                    "IsAccumulator": false,
                    "PriceRatingResult": {
                      "AssetId": "6260FA8AF7E94CFAA233762A42A72A8B",
                      "ActionId": "4",
                      "PriceRatingResult": "ALL",
                      "RatingResultReason": "NO_SPECIFIC_REASON"
                    }
                  }
                ]
              }
            },
            "RatedUnits": "[]",
            "ChargedUnits": "null",
            "ResultCode": "SUCCESS",
            "RatingResultReason": "NO_SPECIFIC_REASON",
            "TimeSwitchResult": "has not hit any switch time",
            "FreeResult": null,
            "ChargingResult": null,
            "ApplyingResult": "DefaultApplyingResult [myAssetResults={ActionId=4=com.ericsson.bss.rm.charging.race.engine.internal.applying.impl.DefaultAssetResult@2bf9b29d}]",
            "RuleRunnerResult": {
              "Apop": {
                "priceId": "e6116d30ec2bd45b28739214a1dedfac",
                "productPriceId": null,
                "name": "AtomicProductOfferingPrice-e6116d30ec2bd45b28739214a1dedfac",
                "productPriceExternalId": null
              },
              "ActionPack": {
                "SessionSetupFeePack": {
                  "PriceActions": []
                },
                "FixedPricePack": {
                  "PriceActions": [
                    {
                      "Price": "10.000000 usd",
                      "AssetId": "6260FA8AF7E94CFAA233762A42A72A8B",
                      "ImplicitBucket": null,
                      "PriceActionType": "PRICE",
                      "RuleActionTag": {
                        "PricingActionType": "PurchasePrice",
                        "PricingActionId": "be6d2e16a5ee57f893cff92e160c5691",
                        "AmountType": "GROSS"
                      },
                      "ProductType": null,
                      "ActionId": 4,
                      "ExecutedAction": "Fee"
                    }
                  ]
                },
                "LinearPricePack=": {
                  "PriceActions": []
                },
                "FixedDiscount=": null,
                "LinearDiscount=": null,
                "SessionSetupFeeDiscount=": null,
                "AdminChargeDiscount=": null,
                "ChargingIntervalPack=": {
                  "ChargingIntervals": []
                },
                "BucketOperationPack=": {
                  "BucketOperationActions": []
                },
                "NotificationPack=": {
                  "NotificationActions": []
                },
                "PostActionPack=": {
                  "PostActions": []
                }
              },
              "AssetVreIdLimitPack": {
                "AssetConditions": {},
                "AvailableUnitsConditions": {}
              },
              "AssetIdLimitPack": {
                "AssetLimits": {},
                "AvailableUnitsAssetLimits": {}
              },
              "IsApopTriggered": true,
              "IsCpopFound": true,
              "OtherPartyId": null,
              "RuleRunnerExitReason": null
            }
          }
        },
        "APOP: AtomicProductOfferingPrice-e6116d30ec2bd45b28739214a1dedfac (e6116d30ec2bd45b28739214a1dedfac)",
        "
+-- Purchase fee EUN
    +-- Pay fee with EUN
        !-- Payment from BAB
        !-- Send end-user notification
              Warning, notification category not set.
              Adding NotificationCreator to PostActions: {\"PartialNotificationResult\":{\"NotificationTemplateId\":\"172353\",\"ProductId\":null,\"ProductBucketId\":null,\"BillingAccountId\":null,\"BillingAccountBucketId\":null,\"BillingAccountBucketSpecId\":null}}
              com.ericsson.bss.vre.core.treerule.TreeExecutionException: java.lang.ClassCastException: com.ericsson.bss.rm.charging.vre.tree.elements.triggers.NotificationCreator cannot be cast to com.ericsson.bss.rm.charging.vre.tree.elements.triggers.ExternalNotificationCreator
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.execute(TreeTraverser.java:64)
  at com.ericsson.bss.vre.core.treerule.TracingTreeExecutionProxy.execute(TracingTreeExecutionProxy.java:67)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.traverseElement(TreeTraverser.java:43)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeElement(TreeTraverser.java:195)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeNode(TreeTraverser.java:109)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeTreeElement(TreeTraverser.java:74)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.execute(TreeTraverser.java:56)
  at com.ericsson.bss.vre.core.treerule.TracingTreeExecutionProxy.execute(TracingTreeExecutionProxy.java:67)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.traverseElement(TreeTraverser.java:43)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeElement(TreeTraverser.java:195)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeNode(TreeTraverser.java:109)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeTreeElement(TreeTraverser.java:74)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.execute(TreeTraverser.java:56)
  at com.ericsson.bss.vre.core.treerule.TracingTreeExecutionProxy.execute(TracingTreeExecutionProxy.java:67)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.traverseElement(TreeTraverser.java:43)
  at com.ericsson.bss.vre.core.treerule.TreeRule.runRule(TreeRule.java:175)
  at com.ericsson.bss.vre.core.treerule.TreeRule.apply(TreeRule.java:103)
  at com.ericsson.bss.rm.charging.race.engine.internal.rulerunner.impl.ApopUtils.runRuleFor(ApopUtils.java:74)
  at com.ericsson.bss.rm.charging.race.engine.internal.rulerunner.impl.AdminChargeRuleRunner.runRule(AdminChargeRuleRunner.java:62)
  at com.ericsson.bss.rm.charging.race.engine.internal.AdminChargeRace.runRules(AdminChargeRace.java:136)
  at com.ericsson.bss.rm.charging.race.engine.internal.AdminChargeRace.executeAll(AdminChargeRace.java:84)
  at com.ericsson.bss.rm.charging.service.admincharge.adminchargelogic.AbstractAdminChargeStrategy.productExecuteAll(AbstractAdminChargeStrategy.java:293)
  at com.ericsson.bss.rm.charging.service.admincharge.adminchargelogic.AbstractAdminChargeStrategy.executeBaseProducts(AbstractAdminChargeStrategy.java:258)
  at com.ericsson.bss.rm.charging.service.admincharge.adminchargelogic.AbstractAdminChargeStrategy.executeRace(AbstractAdminChargeStrategy.java:171)
  at com.ericsson.bss.rm.charging.service.admincharge.activity.AdminChargeReserveActivity.reserve(AdminChargeReserveActivity.java:45)
  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  at java.lang.reflect.Method.invoke(Method.java:498)
  at com.ericsson.bss.rm.charging.rf.core.engine.internal.ExecutionObjectImpl.run(ExecutionObjectImpl.java:254)
  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
  at java.lang.Thread.run(Thread.java:748)
  Caused by: java.lang.ClassCastException: com.ericsson.bss.rm.charging.vre.tree.elements.triggers.NotificationCreator cannot be cast to com.ericsson.bss.rm.charging.vre.tree.elements.triggers.ExternalNotificationCreator
  at com.ericsson.bss.rm.charging.race.engine.internal.rulerunner.api.DefaultPostActionFromRule.<init>(DefaultPostActionFromRule.java:41)
  at com.ericsson.bss.rm.charging.race.engine.PostActionFromRule$PostActionFromRuleBuilder.build(PostActionFromRule.java:42)
  at com.ericsson.bss.rm.charging.race.engine.internal.rulerunner.impl.RaceDataSet.addPostAction(RaceDataSet.java:92)
  at com.ericsson.bss.rm.charging.vre.tree.elements.modifier.NotificationModifier.executeInternal(NotificationModifier.java:154)
  at com.ericsson.bss.rm.charging.vre.tree.elements.modifier.OptionalTreeModifier.execute(OptionalTreeModifier.java:65)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeTreeElement(TreeTraverser.java:79)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.execute(TreeTraverser.java:56)
  ... 32 more
",
        "No rule found for Billing Account 6260FA8AF7E94CFAA233762A42A72A8B with bucket id CF8AF6AD9D854E57A467E8286F2D60D6",
        "Creating  BillingAccountAsset Using Default Data Model:",
        {
          "CPOP": "c6c5135469dc867f70462c5dca978209",
          "APOP": "e6116d30ec2bd45b28739214a1dedfac",
          "BillingAccount": "6260FA8AF7E94CFAA233762A42A72A8B",
          "BillingAccountBuckets": [
            {
              "BillingAccountId": null,
              "BillingAccountBucketSpecificationId": "1da81516-4e7b-449b-a149-ccf320ea5c41",
              "BillingAccountBucketId": "CF8AF6AD9D854E57A467E8286F2D60D6"
            }
          ]
        },
        "Created Fee, ActionId: 6, Price: 10 usd, AssetId: 6260FA8AF7E94CFAA233762A42A72A8B",
        "Before rate: bucket balance for AssetId[6260FA8AF7E94CFAA233762A42A72A8B] is hard available: 980.000000 usd and soft available: null",
        "ActionId = 6 : Total Fee: 10.000000 usd could be afforded",
        "All fees could be afforded",
        "Created bucket change of 10.000000 for ASSET_BILLING_ACCOUNT, available units considering reservations were 980.000000, available units would now be 970.000000",
        {
          "RaceResult after execute all": {
            "ChargingIntervalPack": null,
            "AreSessionSetupFeesCharged": false,
            "AreSessionStartFeesCharged": true,
            "ActionResultPacks": {
              "SessionStartFeeActionResultPack": {
                "ActionResults": [
                  {
                    "ExecutedAction": "Fee",
                    "RatedUnits": "no rated units",
                    "ChargedUnits": "no charged units",
                    "Cost": "Cost [myBaseCost={\"Value\":10,\"Uom\":\"usd\"}, myDiscountedCost={\"Value\":10,\"Uom\":\"usd\"}]",
                    "NumberOfChargingIntervals": null,
                    "DiscountAction": null,
                    "IsAccumulator": false,
                    "PriceRatingResult": {
                      "AssetId": "6260FA8AF7E94CFAA233762A42A72A8B",
                      "ActionId": "6",
                      "PriceRatingResult": "ALL",
                      "RatingResultReason": "NO_SPECIFIC_REASON"
                    }
                  }
                ]
              }
            },
            "RatedUnits": "[]",
            "ChargedUnits": "null",
            "ResultCode": "SUCCESS",
            "RatingResultReason": "NO_SPECIFIC_REASON",
            "TimeSwitchResult": "has not hit any switch time",
            "FreeResult": null,
            "ChargingResult": null,
            "ApplyingResult": "DefaultApplyingResult [myAssetResults={ActionId=6=com.ericsson.bss.rm.charging.race.engine.internal.applying.impl.DefaultAssetResult@4c40e717}]",
            "RuleRunnerResult": {
              "Apop": {
                "priceId": "e6116d30ec2bd45b28739214a1dedfac",
                "productPriceId": null,
                "name": "AtomicProductOfferingPrice-e6116d30ec2bd45b28739214a1dedfac",
                "productPriceExternalId": null
              },
              "ActionPack": {
                "SessionSetupFeePack": {
                  "PriceActions": []
                },
                "FixedPricePack": {
                  "PriceActions": [
                    {
                      "Price": "10.000000 usd",
                      "AssetId": "6260FA8AF7E94CFAA233762A42A72A8B",
                      "ImplicitBucket": null,
                      "PriceActionType": "PRICE",
                      "RuleActionTag": {
                        "PricingActionType": "PurchasePrice",
                        "PricingActionId": "be6d2e16a5ee57f893cff92e160c5691",
                        "AmountType": "GROSS"
                      },
                      "ProductType": null,
                      "ActionId": 6,
                      "ExecutedAction": "Fee"
                    }
                  ]
                },
                "LinearPricePack=": {
                  "PriceActions": []
                },
                "FixedDiscount=": null,
                "LinearDiscount=": null,
                "SessionSetupFeeDiscount=": null,
                "AdminChargeDiscount=": null,
                "ChargingIntervalPack=": {
                  "ChargingIntervals": []
                },
                "BucketOperationPack=": {
                  "BucketOperationActions": []
                },
                "NotificationPack=": {
                  "NotificationActions": []
                },
                "PostActionPack=": {
                  "PostActions": []
                }
              },
              "AssetVreIdLimitPack": {
                "AssetConditions": {},
                "AvailableUnitsConditions": {}
              },
              "AssetIdLimitPack": {
                "AssetLimits": {},
                "AvailableUnitsAssetLimits": {}
              },
              "IsApopTriggered": true,
              "IsCpopFound": true,
              "OtherPartyId": null,
              "RuleRunnerExitReason": null
            }
          }
        },
        "APOP: AtomicProductOfferingPrice-e6116d30ec2bd45b28739214a1dedfac (e6116d30ec2bd45b28739214a1dedfac)",
        "
+-- Purchase fee EUN
    +-- Pay fee with EUN
        !-- Payment from BAB
        !-- Send end-user notification
              Warning, notification category not set.
              Adding NotificationCreator to PostActions: {\"PartialNotificationResult\":{\"NotificationTemplateId\":\"172353\",\"ProductId\":null,\"ProductBucketId\":null,\"BillingAccountId\":null,\"BillingAccountBucketId\":null,\"BillingAccountBucketSpecId\":null}}
              com.ericsson.bss.vre.core.treerule.TreeExecutionException: java.lang.ClassCastException: com.ericsson.bss.rm.charging.vre.tree.elements.triggers.NotificationCreator cannot be cast to com.ericsson.bss.rm.charging.vre.tree.elements.triggers.ExternalNotificationCreator
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.execute(TreeTraverser.java:64)
  at com.ericsson.bss.vre.core.treerule.TracingTreeExecutionProxy.execute(TracingTreeExecutionProxy.java:67)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.traverseElement(TreeTraverser.java:43)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeElement(TreeTraverser.java:195)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeNode(TreeTraverser.java:109)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeTreeElement(TreeTraverser.java:74)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.execute(TreeTraverser.java:56)
  at com.ericsson.bss.vre.core.treerule.TracingTreeExecutionProxy.execute(TracingTreeExecutionProxy.java:67)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.traverseElement(TreeTraverser.java:43)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeElement(TreeTraverser.java:195)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeNode(TreeTraverser.java:109)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeTreeElement(TreeTraverser.java:74)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.execute(TreeTraverser.java:56)
  at com.ericsson.bss.vre.core.treerule.TracingTreeExecutionProxy.execute(TracingTreeExecutionProxy.java:67)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.traverseElement(TreeTraverser.java:43)
  at com.ericsson.bss.vre.core.treerule.TreeRule.runRule(TreeRule.java:175)
  at com.ericsson.bss.vre.core.treerule.TreeRule.apply(TreeRule.java:103)
  at com.ericsson.bss.rm.charging.race.engine.internal.rulerunner.impl.ApopUtils.runRuleFor(ApopUtils.java:74)
  at com.ericsson.bss.rm.charging.race.engine.internal.rulerunner.impl.AdminChargeRuleRunner.runRule(AdminChargeRuleRunner.java:62)
  at com.ericsson.bss.rm.charging.race.engine.internal.AdminChargeRace.runRules(AdminChargeRace.java:136)
  at com.ericsson.bss.rm.charging.race.engine.internal.AdminChargeRace.executeAll(AdminChargeRace.java:84)
  at com.ericsson.bss.rm.charging.service.admincharge.adminchargelogic.AbstractAdminChargeStrategy.productExecuteAll(AbstractAdminChargeStrategy.java:293)
  at com.ericsson.bss.rm.charging.service.admincharge.adminchargelogic.AbstractAdminChargeStrategy.executeBaseProducts(AbstractAdminChargeStrategy.java:258)
  at com.ericsson.bss.rm.charging.service.admincharge.adminchargelogic.AbstractAdminChargeStrategy.executeRace(AbstractAdminChargeStrategy.java:171)
  at com.ericsson.bss.rm.charging.service.admincharge.activity.AdminChargeReserveActivity.reserve(AdminChargeReserveActivity.java:45)
  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  at java.lang.reflect.Method.invoke(Method.java:498)
  at com.ericsson.bss.rm.charging.rf.core.engine.internal.ExecutionObjectImpl.run(ExecutionObjectImpl.java:254)
  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
  at java.lang.Thread.run(Thread.java:748)
  Caused by: java.lang.ClassCastException: com.ericsson.bss.rm.charging.vre.tree.elements.triggers.NotificationCreator cannot be cast to com.ericsson.bss.rm.charging.vre.tree.elements.triggers.ExternalNotificationCreator
  at com.ericsson.bss.rm.charging.race.engine.internal.rulerunner.api.DefaultPostActionFromRule.<init>(DefaultPostActionFromRule.java:41)
  at com.ericsson.bss.rm.charging.race.engine.PostActionFromRule$PostActionFromRuleBuilder.build(PostActionFromRule.java:42)
  at com.ericsson.bss.rm.charging.race.engine.internal.rulerunner.impl.RaceDataSet.addPostAction(RaceDataSet.java:92)
  at com.ericsson.bss.rm.charging.vre.tree.elements.modifier.NotificationModifier.executeInternal(NotificationModifier.java:154)
  at com.ericsson.bss.rm.charging.vre.tree.elements.modifier.OptionalTreeModifier.execute(OptionalTreeModifier.java:65)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeTreeElement(TreeTraverser.java:79)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.execute(TreeTraverser.java:56)
  ... 32 more
",
        "No rule found for Billing Account 6260FA8AF7E94CFAA233762A42A72A8B with bucket id CF8AF6AD9D854E57A467E8286F2D60D6",
        "Creating  BillingAccountAsset Using Default Data Model:",
        {
          "CPOP": "c6c5135469dc867f70462c5dca978209",
          "APOP": "e6116d30ec2bd45b28739214a1dedfac",
          "BillingAccount": "6260FA8AF7E94CFAA233762A42A72A8B",
          "BillingAccountBuckets": [
            {
              "BillingAccountId": null,
              "BillingAccountBucketSpecificationId": "1da81516-4e7b-449b-a149-ccf320ea5c41",
              "BillingAccountBucketId": "CF8AF6AD9D854E57A467E8286F2D60D6"
            }
          ]
        },
        "Created Fee, ActionId: 8, Price: 10 usd, AssetId: 6260FA8AF7E94CFAA233762A42A72A8B",
        "Before rate: bucket balance for AssetId[6260FA8AF7E94CFAA233762A42A72A8B] is hard available: 970.000000 usd and soft available: null",
        "ActionId = 8 : Total Fee: 10.000000 usd could be afforded",
        "All fees could be afforded",
        "Created bucket change of 10.000000 for ASSET_BILLING_ACCOUNT, available units considering reservations were 970.000000, available units would now be 960.000000",
        {
          "RaceResult after execute all": {
            "ChargingIntervalPack": null,
            "AreSessionSetupFeesCharged": false,
            "AreSessionStartFeesCharged": true,
            "ActionResultPacks": {
              "SessionStartFeeActionResultPack": {
                "ActionResults": [
                  {
                    "ExecutedAction": "Fee",
                    "RatedUnits": "no rated units",
                    "ChargedUnits": "no charged units",
                    "Cost": "Cost [myBaseCost={\"Value\":10,\"Uom\":\"usd\"}, myDiscountedCost={\"Value\":10,\"Uom\":\"usd\"}]",
                    "NumberOfChargingIntervals": null,
                    "DiscountAction": null,
                    "IsAccumulator": false,
                    "PriceRatingResult": {
                      "AssetId": "6260FA8AF7E94CFAA233762A42A72A8B",
                      "ActionId": "8",
                      "PriceRatingResult": "ALL",
                      "RatingResultReason": "NO_SPECIFIC_REASON"
                    }
                  }
                ]
              }
            },
            "RatedUnits": "[]",
            "ChargedUnits": "null",
            "ResultCode": "SUCCESS",
            "RatingResultReason": "NO_SPECIFIC_REASON",
            "TimeSwitchResult": "has not hit any switch time",
            "FreeResult": null,
            "ChargingResult": null,
            "ApplyingResult": "DefaultApplyingResult [myAssetResults={ActionId=8=com.ericsson.bss.rm.charging.race.engine.internal.applying.impl.DefaultAssetResult@257d86ab}]",
            "RuleRunnerResult": {
              "Apop": {
                "priceId": "e6116d30ec2bd45b28739214a1dedfac",
                "productPriceId": null,
                "name": "AtomicProductOfferingPrice-e6116d30ec2bd45b28739214a1dedfac",
                "productPriceExternalId": null
              },
              "ActionPack": {
                "SessionSetupFeePack": {
                  "PriceActions": []
                },
                "FixedPricePack": {
                  "PriceActions": [
                    {
                      "Price": "10.000000 usd",
                      "AssetId": "6260FA8AF7E94CFAA233762A42A72A8B",
                      "ImplicitBucket": null,
                      "PriceActionType": "PRICE",
                      "RuleActionTag": {
                        "PricingActionType": "PurchasePrice",
                        "PricingActionId": "be6d2e16a5ee57f893cff92e160c5691",
                        "AmountType": "GROSS"
                      },
                      "ProductType": null,
                      "ActionId": 8,
                      "ExecutedAction": "Fee"
                    }
                  ]
                },
                "LinearPricePack=": {
                  "PriceActions": []
                },
                "FixedDiscount=": null,
                "LinearDiscount=": null,
                "SessionSetupFeeDiscount=": null,
                "AdminChargeDiscount=": null,
                "ChargingIntervalPack=": {
                  "ChargingIntervals": []
                },
                "BucketOperationPack=": {
                  "BucketOperationActions": []
                },
                "NotificationPack=": {
                  "NotificationActions": []
                },
                "PostActionPack=": {
                  "PostActions": []
                }
              },
              "AssetVreIdLimitPack": {
                "AssetConditions": {},
                "AvailableUnitsConditions": {}
              },
              "AssetIdLimitPack": {
                "AssetLimits": {},
                "AvailableUnitsAssetLimits": {}
              },
              "IsApopTriggered": true,
              "IsCpopFound": true,
              "OtherPartyId": null,
              "RuleRunnerExitReason": null
            }
          }
        },
        "APOP: AtomicProductOfferingPrice-fbd470b2d46914186936e0cf7e694f50 (fbd470b2d46914186936e0cf7e694f50)",
        "
+-- Absolute Data Joy strategy
    +-- Absolute discount
        !-- Set absolute linear discount
",
        "Created ABSOLUTElinear discount action from rule: , ExecutedActionOneTimeAbsoluteLinearDiscountModifier, ActionId: ActionId=9, Value: 5, UnitOfMeasurement: usd, DiscountType: ABSOLUTE, Target: PROMOTION_FOR, Interval: {\"Value\":3,\"Uom\":\"quantity\"}, MaxNumberOfTargets: {\"Value\":1,\"Uom\":\"quantity\"}, AssetForProductCounter: null, AssetForDiscountCounter: null, TaggedEventRecordValues: {\"GLCode\":null,\"PriceTaxClass\":null,\"PricingActionType\":null,\"PricingActionId\":null,\"AmountType\":null}",
        {
          "RaceResult after execute rule": {
            "ChargingIntervalPack": null,
            "AreSessionSetupFeesCharged": false,
            "AreSessionStartFeesCharged": false,
            "ActionResultPacks": {},
            "RatedUnits": "[]",
            "ChargedUnits": "null",
            "ResultCode": "SUCCESS",
            "RatingResultReason": "NO_SPECIFIC_REASON",
            "TimeSwitchResult": "has not hit any switch time",
            "FreeResult": null,
            "ChargingResult": null,
            "ApplyingResult": null,
            "RuleRunnerResult": {
              "Apop": {
                "priceId": "fbd470b2d46914186936e0cf7e694f50",
                "productPriceId": null,
                "name": "AtomicProductOfferingPrice-fbd470b2d46914186936e0cf7e694f50",
                "productPriceExternalId": null
              },
              "ActionPack": {
                "SessionSetupFeePack": {
                  "PriceActions": []
                },
                "FixedPricePack": {
                  "PriceActions": []
                },
                "LinearPricePack=": {
                  "PriceActions": []
                },
                "FixedDiscount=": null,
                "LinearDiscount=": null,
                "SessionSetupFeeDiscount=": null,
                "AdminChargeDiscount=": {
                  "Value": 5,
                  "UnitOfMeasurement": "usd",
                  "DiscountType": "ABSOLUTE",
                  "ActionId": "9",
                  "ExecutedAction": "OneTimeAbsoluteLinearDiscountModifier",
                  "DiscountAction": "SetAbsoluteDiscount",
                  "Target": "PROMOTION_FOR",
                  "Interval": "3.000000 quantity",
                  "MaxNumberOfTargets": "1.000000 quantity",
                  "AssetForProductCounter": null,
                  "AssetForDiscountCounter": null,
                  "TaggedEventRecordValues": {}
                },
                "ChargingIntervalPack=": {
                  "ChargingIntervals": []
                },
                "BucketOperationPack=": {
                  "BucketOperationActions": []
                },
                "NotificationPack=": {
                  "NotificationActions": []
                },
                "PostActionPack=": {
                  "PostActions": []
                }
              },
              "AssetVreIdLimitPack": {
                "AssetConditions": {},
                "AvailableUnitsConditions": {}
              },
              "AssetIdLimitPack": {
                "AssetLimits": {},
                "AvailableUnitsAssetLimits": {}
              },
              "IsApopTriggered": true,
              "IsCpopFound": true,
              "OtherPartyId": null,
              "RuleRunnerExitReason": null
            }
          }
        },
        "Trying to find next prioritized SharingConsumer: ",
        "No SharingConsumer could be found.",
        "Number of base products eligible for discount: 0",
        "Purchase qualified for discount but discount could not be distributed as no product in the basket has a discountFor relationship from the price modification product",
        "APOP: AtomicProductOfferingPrice-e6116d30ec2bd45b28739214a1dedfac (e6116d30ec2bd45b28739214a1dedfac)",
        "
+-- Purchase fee EUN
    +-- Pay fee with EUN
        !-- Payment from BAB
        !-- Send end-user notification
              Warning, notification category not set.
              Adding NotificationCreator to PostActions: {\"PartialNotificationResult\":{\"NotificationTemplateId\":\"172353\",\"ProductId\":null,\"ProductBucketId\":null,\"BillingAccountId\":null,\"BillingAccountBucketId\":null,\"BillingAccountBucketSpecId\":null}}
              com.ericsson.bss.vre.core.treerule.TreeExecutionException: java.lang.ClassCastException: com.ericsson.bss.rm.charging.vre.tree.elements.triggers.NotificationCreator cannot be cast to com.ericsson.bss.rm.charging.vre.tree.elements.triggers.ExternalNotificationCreator
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.execute(TreeTraverser.java:64)
  at com.ericsson.bss.vre.core.treerule.TracingTreeExecutionProxy.execute(TracingTreeExecutionProxy.java:67)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.traverseElement(TreeTraverser.java:43)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeElement(TreeTraverser.java:195)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeNode(TreeTraverser.java:109)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeTreeElement(TreeTraverser.java:74)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.execute(TreeTraverser.java:56)
  at com.ericsson.bss.vre.core.treerule.TracingTreeExecutionProxy.execute(TracingTreeExecutionProxy.java:67)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.traverseElement(TreeTraverser.java:43)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeElement(TreeTraverser.java:195)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeNode(TreeTraverser.java:109)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeTreeElement(TreeTraverser.java:74)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.execute(TreeTraverser.java:56)
  at com.ericsson.bss.vre.core.treerule.TracingTreeExecutionProxy.execute(TracingTreeExecutionProxy.java:67)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.traverseElement(TreeTraverser.java:43)
  at com.ericsson.bss.vre.core.treerule.TreeRule.runRule(TreeRule.java:175)
  at com.ericsson.bss.vre.core.treerule.TreeRule.apply(TreeRule.java:103)
  at com.ericsson.bss.rm.charging.race.engine.internal.rulerunner.impl.ApopUtils.runRuleFor(ApopUtils.java:74)
  at com.ericsson.bss.rm.charging.race.engine.internal.rulerunner.impl.AdminChargeRuleRunner.runRule(AdminChargeRuleRunner.java:62)
  at com.ericsson.bss.rm.charging.race.engine.internal.AdminChargeRace.runRules(AdminChargeRace.java:136)
  at com.ericsson.bss.rm.charging.race.engine.internal.AdminChargeRace.executeAll(AdminChargeRace.java:84)
  at com.ericsson.bss.rm.charging.service.admincharge.adminchargelogic.AbstractAdminChargeStrategy.productExecuteAll(AbstractAdminChargeStrategy.java:293)
  at com.ericsson.bss.rm.charging.service.admincharge.adminchargelogic.AbstractAdminChargeStrategy.executeRemainingBaseProductsAfterAppliedDiscounts(AbstractAdminChargeStrategy.java:277)
  at com.ericsson.bss.rm.charging.service.admincharge.adminchargelogic.AbstractAdminChargeStrategy.executeRace(AbstractAdminChargeStrategy.java:207)
  at com.ericsson.bss.rm.charging.service.admincharge.activity.AdminChargeReserveActivity.reserve(AdminChargeReserveActivity.java:45)
  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  at java.lang.reflect.Method.invoke(Method.java:498)
  at com.ericsson.bss.rm.charging.rf.core.engine.internal.ExecutionObjectImpl.run(ExecutionObjectImpl.java:254)
  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
  at java.lang.Thread.run(Thread.java:748)
  Caused by: java.lang.ClassCastException: com.ericsson.bss.rm.charging.vre.tree.elements.triggers.NotificationCreator cannot be cast to com.ericsson.bss.rm.charging.vre.tree.elements.triggers.ExternalNotificationCreator
  at com.ericsson.bss.rm.charging.race.engine.internal.rulerunner.api.DefaultPostActionFromRule.<init>(DefaultPostActionFromRule.java:41)
  at com.ericsson.bss.rm.charging.race.engine.PostActionFromRule$PostActionFromRuleBuilder.build(PostActionFromRule.java:42)
  at com.ericsson.bss.rm.charging.race.engine.internal.rulerunner.impl.RaceDataSet.addPostAction(RaceDataSet.java:92)
  at com.ericsson.bss.rm.charging.vre.tree.elements.modifier.NotificationModifier.executeInternal(NotificationModifier.java:154)
  at com.ericsson.bss.rm.charging.vre.tree.elements.modifier.OptionalTreeModifier.execute(OptionalTreeModifier.java:65)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeTreeElement(TreeTraverser.java:79)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.execute(TreeTraverser.java:56)
  ... 32 more
",
        "No rule found for Billing Account 6260FA8AF7E94CFAA233762A42A72A8B with bucket id CF8AF6AD9D854E57A467E8286F2D60D6",
        "Creating  BillingAccountAsset Using Default Data Model:",
        {
          "CPOP": "c6c5135469dc867f70462c5dca978209",
          "APOP": "e6116d30ec2bd45b28739214a1dedfac",
          "BillingAccount": "6260FA8AF7E94CFAA233762A42A72A8B",
          "BillingAccountBuckets": [
            {
              "BillingAccountId": null,
              "BillingAccountBucketSpecificationId": "1da81516-4e7b-449b-a149-ccf320ea5c41",
              "BillingAccountBucketId": "CF8AF6AD9D854E57A467E8286F2D60D6"
            }
          ]
        },
        "Created Fee, ActionId: 11, Price: 10 usd, AssetId: 6260FA8AF7E94CFAA233762A42A72A8B",
        "Before rate: bucket balance for AssetId[6260FA8AF7E94CFAA233762A42A72A8B] is hard available: 1000.000000 usd and soft available: null",
        "ActionId = 11 : Total Fee: 10.000000 usd could be afforded",
        "All fees could be afforded",
        "Created bucket change of 10.000000 for ASSET_BILLING_ACCOUNT, available units considering reservations were 1000.000000, available units would now be 990.000000",
        {
          "RaceResult after execute all": {
            "ChargingIntervalPack": null,
            "AreSessionSetupFeesCharged": false,
            "AreSessionStartFeesCharged": true,
            "ActionResultPacks": {
              "SessionStartFeeActionResultPack": {
                "ActionResults": [
                  {
                    "ExecutedAction": "Fee",
                    "RatedUnits": "no rated units",
                    "ChargedUnits": "no charged units",
                    "Cost": "Cost [myBaseCost={\"Value\":10,\"Uom\":\"usd\"}, myDiscountedCost={\"Value\":10,\"Uom\":\"usd\"}]",
                    "NumberOfChargingIntervals": null,
                    "DiscountAction": null,
                    "IsAccumulator": false,
                    "PriceRatingResult": {
                      "AssetId": "6260FA8AF7E94CFAA233762A42A72A8B",
                      "ActionId": "11",
                      "PriceRatingResult": "ALL",
                      "RatingResultReason": "NO_SPECIFIC_REASON"
                    }
                  }
                ]
              }
            },
            "RatedUnits": "[]",
            "ChargedUnits": "null",
            "ResultCode": "SUCCESS",
            "RatingResultReason": "NO_SPECIFIC_REASON",
            "TimeSwitchResult": "has not hit any switch time",
            "FreeResult": null,
            "ChargingResult": null,
            "ApplyingResult": "DefaultApplyingResult [myAssetResults={ActionId=11=com.ericsson.bss.rm.charging.race.engine.internal.applying.impl.DefaultAssetResult@431c9dfc}]",
            "RuleRunnerResult": {
              "Apop": {
                "priceId": "e6116d30ec2bd45b28739214a1dedfac",
                "productPriceId": null,
                "name": "AtomicProductOfferingPrice-e6116d30ec2bd45b28739214a1dedfac",
                "productPriceExternalId": null
              },
              "ActionPack": {
                "SessionSetupFeePack": {
                  "PriceActions": []
                },
                "FixedPricePack": {
                  "PriceActions": [
                    {
                      "Price": "10.000000 usd",
                      "AssetId": "6260FA8AF7E94CFAA233762A42A72A8B",
                      "ImplicitBucket": null,
                      "PriceActionType": "PRICE",
                      "RuleActionTag": {
                        "PricingActionType": "PurchasePrice",
                        "PricingActionId": "be6d2e16a5ee57f893cff92e160c5691",
                        "AmountType": "GROSS"
                      },
                      "ProductType": null,
                      "ActionId": 11,
                      "ExecutedAction": "Fee"
                    }
                  ]
                },
                "LinearPricePack=": {
                  "PriceActions": []
                },
                "FixedDiscount=": null,
                "LinearDiscount=": null,
                "SessionSetupFeeDiscount=": null,
                "AdminChargeDiscount=": null,
                "ChargingIntervalPack=": {
                  "ChargingIntervals": []
                },
                "BucketOperationPack=": {
                  "BucketOperationActions": []
                },
                "NotificationPack=": {
                  "NotificationActions": []
                },
                "PostActionPack=": {
                  "PostActions": []
                }
              },
              "AssetVreIdLimitPack": {
                "AssetConditions": {},
                "AvailableUnitsConditions": {}
              },
              "AssetIdLimitPack": {
                "AssetLimits": {},
                "AvailableUnitsAssetLimits": {}
              },
              "IsApopTriggered": true,
              "IsCpopFound": true,
              "OtherPartyId": null,
              "RuleRunnerExitReason": null
            }
          }
        },
        "APOP: AtomicProductOfferingPrice-e6116d30ec2bd45b28739214a1dedfac (e6116d30ec2bd45b28739214a1dedfac)",
        "
+-- Purchase fee EUN
    +-- Pay fee with EUN
        !-- Payment from BAB
        !-- Send end-user notification
              Warning, notification category not set.
              Adding NotificationCreator to PostActions: {\"PartialNotificationResult\":{\"NotificationTemplateId\":\"172353\",\"ProductId\":null,\"ProductBucketId\":null,\"BillingAccountId\":null,\"BillingAccountBucketId\":null,\"BillingAccountBucketSpecId\":null}}
              com.ericsson.bss.vre.core.treerule.TreeExecutionException: java.lang.ClassCastException: com.ericsson.bss.rm.charging.vre.tree.elements.triggers.NotificationCreator cannot be cast to com.ericsson.bss.rm.charging.vre.tree.elements.triggers.ExternalNotificationCreator
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.execute(TreeTraverser.java:64)
  at com.ericsson.bss.vre.core.treerule.TracingTreeExecutionProxy.execute(TracingTreeExecutionProxy.java:67)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.traverseElement(TreeTraverser.java:43)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeElement(TreeTraverser.java:195)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeNode(TreeTraverser.java:109)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeTreeElement(TreeTraverser.java:74)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.execute(TreeTraverser.java:56)
  at com.ericsson.bss.vre.core.treerule.TracingTreeExecutionProxy.execute(TracingTreeExecutionProxy.java:67)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.traverseElement(TreeTraverser.java:43)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeElement(TreeTraverser.java:195)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeNode(TreeTraverser.java:109)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeTreeElement(TreeTraverser.java:74)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.execute(TreeTraverser.java:56)
  at com.ericsson.bss.vre.core.treerule.TracingTreeExecutionProxy.execute(TracingTreeExecutionProxy.java:67)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.traverseElement(TreeTraverser.java:43)
  at com.ericsson.bss.vre.core.treerule.TreeRule.runRule(TreeRule.java:175)
  at com.ericsson.bss.vre.core.treerule.TreeRule.apply(TreeRule.java:103)
  at com.ericsson.bss.rm.charging.race.engine.internal.rulerunner.impl.ApopUtils.runRuleFor(ApopUtils.java:74)
  at com.ericsson.bss.rm.charging.race.engine.internal.rulerunner.impl.AdminChargeRuleRunner.runRule(AdminChargeRuleRunner.java:62)
  at com.ericsson.bss.rm.charging.race.engine.internal.AdminChargeRace.runRules(AdminChargeRace.java:136)
  at com.ericsson.bss.rm.charging.race.engine.internal.AdminChargeRace.executeAll(AdminChargeRace.java:84)
  at com.ericsson.bss.rm.charging.service.admincharge.adminchargelogic.AbstractAdminChargeStrategy.productExecuteAll(AbstractAdminChargeStrategy.java:293)
  at com.ericsson.bss.rm.charging.service.admincharge.adminchargelogic.AbstractAdminChargeStrategy.executeRemainingBaseProductsAfterAppliedDiscounts(AbstractAdminChargeStrategy.java:277)
  at com.ericsson.bss.rm.charging.service.admincharge.adminchargelogic.AbstractAdminChargeStrategy.executeRace(AbstractAdminChargeStrategy.java:207)
  at com.ericsson.bss.rm.charging.service.admincharge.activity.AdminChargeReserveActivity.reserve(AdminChargeReserveActivity.java:45)
  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  at java.lang.reflect.Method.invoke(Method.java:498)
  at com.ericsson.bss.rm.charging.rf.core.engine.internal.ExecutionObjectImpl.run(ExecutionObjectImpl.java:254)
  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
  at java.lang.Thread.run(Thread.java:748)
  Caused by: java.lang.ClassCastException: com.ericsson.bss.rm.charging.vre.tree.elements.triggers.NotificationCreator cannot be cast to com.ericsson.bss.rm.charging.vre.tree.elements.triggers.ExternalNotificationCreator
  at com.ericsson.bss.rm.charging.race.engine.internal.rulerunner.api.DefaultPostActionFromRule.<init>(DefaultPostActionFromRule.java:41)
  at com.ericsson.bss.rm.charging.race.engine.PostActionFromRule$PostActionFromRuleBuilder.build(PostActionFromRule.java:42)
  at com.ericsson.bss.rm.charging.race.engine.internal.rulerunner.impl.RaceDataSet.addPostAction(RaceDataSet.java:92)
  at com.ericsson.bss.rm.charging.vre.tree.elements.modifier.NotificationModifier.executeInternal(NotificationModifier.java:154)
  at com.ericsson.bss.rm.charging.vre.tree.elements.modifier.OptionalTreeModifier.execute(OptionalTreeModifier.java:65)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeTreeElement(TreeTraverser.java:79)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.execute(TreeTraverser.java:56)
  ... 32 more
",
        "No rule found for Billing Account 6260FA8AF7E94CFAA233762A42A72A8B with bucket id CF8AF6AD9D854E57A467E8286F2D60D6",
        "Creating  BillingAccountAsset Using Default Data Model:",
        {
          "CPOP": "c6c5135469dc867f70462c5dca978209",
          "APOP": "e6116d30ec2bd45b28739214a1dedfac",
          "BillingAccount": "6260FA8AF7E94CFAA233762A42A72A8B",
          "BillingAccountBuckets": [
            {
              "BillingAccountId": null,
              "BillingAccountBucketSpecificationId": "1da81516-4e7b-449b-a149-ccf320ea5c41",
              "BillingAccountBucketId": "CF8AF6AD9D854E57A467E8286F2D60D6"
            }
          ]
        },
        "Created Fee, ActionId: 13, Price: 10 usd, AssetId: 6260FA8AF7E94CFAA233762A42A72A8B",
        "Before rate: bucket balance for AssetId[6260FA8AF7E94CFAA233762A42A72A8B] is hard available: 990.000000 usd and soft available: null",
        "ActionId = 13 : Total Fee: 10.000000 usd could be afforded",
        "All fees could be afforded",
        "Created bucket change of 10.000000 for ASSET_BILLING_ACCOUNT, available units considering reservations were 990.000000, available units would now be 980.000000",
        {
          "RaceResult after execute all": {
            "ChargingIntervalPack": null,
            "AreSessionSetupFeesCharged": false,
            "AreSessionStartFeesCharged": true,
            "ActionResultPacks": {
              "SessionStartFeeActionResultPack": {
                "ActionResults": [
                  {
                    "ExecutedAction": "Fee",
                    "RatedUnits": "no rated units",
                    "ChargedUnits": "no charged units",
                    "Cost": "Cost [myBaseCost={\"Value\":10,\"Uom\":\"usd\"}, myDiscountedCost={\"Value\":10,\"Uom\":\"usd\"}]",
                    "NumberOfChargingIntervals": null,
                    "DiscountAction": null,
                    "IsAccumulator": false,
                    "PriceRatingResult": {
                      "AssetId": "6260FA8AF7E94CFAA233762A42A72A8B",
                      "ActionId": "13",
                      "PriceRatingResult": "ALL",
                      "RatingResultReason": "NO_SPECIFIC_REASON"
                    }
                  }
                ]
              }
            },
            "RatedUnits": "[]",
            "ChargedUnits": "null",
            "ResultCode": "SUCCESS",
            "RatingResultReason": "NO_SPECIFIC_REASON",
            "TimeSwitchResult": "has not hit any switch time",
            "FreeResult": null,
            "ChargingResult": null,
            "ApplyingResult": "DefaultApplyingResult [myAssetResults={ActionId=13=com.ericsson.bss.rm.charging.race.engine.internal.applying.impl.DefaultAssetResult@1ac47d18}]",
            "RuleRunnerResult": {
              "Apop": {
                "priceId": "e6116d30ec2bd45b28739214a1dedfac",
                "productPriceId": null,
                "name": "AtomicProductOfferingPrice-e6116d30ec2bd45b28739214a1dedfac",
                "productPriceExternalId": null
              },
              "ActionPack": {
                "SessionSetupFeePack": {
                  "PriceActions": []
                },
                "FixedPricePack": {
                  "PriceActions": [
                    {
                      "Price": "10.000000 usd",
                      "AssetId": "6260FA8AF7E94CFAA233762A42A72A8B",
                      "ImplicitBucket": null,
                      "PriceActionType": "PRICE",
                      "RuleActionTag": {
                        "PricingActionType": "PurchasePrice",
                        "PricingActionId": "be6d2e16a5ee57f893cff92e160c5691",
                        "AmountType": "GROSS"
                      },
                      "ProductType": null,
                      "ActionId": 13,
                      "ExecutedAction": "Fee"
                    }
                  ]
                },
                "LinearPricePack=": {
                  "PriceActions": []
                },
                "FixedDiscount=": null,
                "LinearDiscount=": null,
                "SessionSetupFeeDiscount=": null,
                "AdminChargeDiscount=": null,
                "ChargingIntervalPack=": {
                  "ChargingIntervals": []
                },
                "BucketOperationPack=": {
                  "BucketOperationActions": []
                },
                "NotificationPack=": {
                  "NotificationActions": []
                },
                "PostActionPack=": {
                  "PostActions": []
                }
              },
              "AssetVreIdLimitPack": {
                "AssetConditions": {},
                "AvailableUnitsConditions": {}
              },
              "AssetIdLimitPack": {
                "AssetLimits": {},
                "AvailableUnitsAssetLimits": {}
              },
              "IsApopTriggered": true,
              "IsCpopFound": true,
              "OtherPartyId": null,
              "RuleRunnerExitReason": null
            }
          }
        },
        "APOP: AtomicProductOfferingPrice-e6116d30ec2bd45b28739214a1dedfac (e6116d30ec2bd45b28739214a1dedfac)",
        "
+-- Purchase fee EUN
    +-- Pay fee with EUN
        !-- Payment from BAB
        !-- Send end-user notification
              Warning, notification category not set.
              Adding NotificationCreator to PostActions: {\"PartialNotificationResult\":{\"NotificationTemplateId\":\"172353\",\"ProductId\":null,\"ProductBucketId\":null,\"BillingAccountId\":null,\"BillingAccountBucketId\":null,\"BillingAccountBucketSpecId\":null}}
              com.ericsson.bss.vre.core.treerule.TreeExecutionException: java.lang.ClassCastException: com.ericsson.bss.rm.charging.vre.tree.elements.triggers.NotificationCreator cannot be cast to com.ericsson.bss.rm.charging.vre.tree.elements.triggers.ExternalNotificationCreator
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.execute(TreeTraverser.java:64)
  at com.ericsson.bss.vre.core.treerule.TracingTreeExecutionProxy.execute(TracingTreeExecutionProxy.java:67)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.traverseElement(TreeTraverser.java:43)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeElement(TreeTraverser.java:195)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeNode(TreeTraverser.java:109)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeTreeElement(TreeTraverser.java:74)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.execute(TreeTraverser.java:56)
  at com.ericsson.bss.vre.core.treerule.TracingTreeExecutionProxy.execute(TracingTreeExecutionProxy.java:67)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.traverseElement(TreeTraverser.java:43)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeElement(TreeTraverser.java:195)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeNode(TreeTraverser.java:109)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeTreeElement(TreeTraverser.java:74)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.execute(TreeTraverser.java:56)
  at com.ericsson.bss.vre.core.treerule.TracingTreeExecutionProxy.execute(TracingTreeExecutionProxy.java:67)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.traverseElement(TreeTraverser.java:43)
  at com.ericsson.bss.vre.core.treerule.TreeRule.runRule(TreeRule.java:175)
  at com.ericsson.bss.vre.core.treerule.TreeRule.apply(TreeRule.java:103)
  at com.ericsson.bss.rm.charging.race.engine.internal.rulerunner.impl.ApopUtils.runRuleFor(ApopUtils.java:74)
  at com.ericsson.bss.rm.charging.race.engine.internal.rulerunner.impl.AdminChargeRuleRunner.runRule(AdminChargeRuleRunner.java:62)
  at com.ericsson.bss.rm.charging.race.engine.internal.AdminChargeRace.runRules(AdminChargeRace.java:136)
  at com.ericsson.bss.rm.charging.race.engine.internal.AdminChargeRace.executeAll(AdminChargeRace.java:84)
  at com.ericsson.bss.rm.charging.service.admincharge.adminchargelogic.AbstractAdminChargeStrategy.productExecuteAll(AbstractAdminChargeStrategy.java:293)
  at com.ericsson.bss.rm.charging.service.admincharge.adminchargelogic.AbstractAdminChargeStrategy.executeRemainingBaseProductsAfterAppliedDiscounts(AbstractAdminChargeStrategy.java:277)
  at com.ericsson.bss.rm.charging.service.admincharge.adminchargelogic.AbstractAdminChargeStrategy.executeRace(AbstractAdminChargeStrategy.java:207)
  at com.ericsson.bss.rm.charging.service.admincharge.activity.AdminChargeReserveActivity.reserve(AdminChargeReserveActivity.java:45)
  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  at java.lang.reflect.Method.invoke(Method.java:498)
  at com.ericsson.bss.rm.charging.rf.core.engine.internal.ExecutionObjectImpl.run(ExecutionObjectImpl.java:254)
  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
  at java.lang.Thread.run(Thread.java:748)
  Caused by: java.lang.ClassCastException: com.ericsson.bss.rm.charging.vre.tree.elements.triggers.NotificationCreator cannot be cast to com.ericsson.bss.rm.charging.vre.tree.elements.triggers.ExternalNotificationCreator
  at com.ericsson.bss.rm.charging.race.engine.internal.rulerunner.api.DefaultPostActionFromRule.<init>(DefaultPostActionFromRule.java:41)
  at com.ericsson.bss.rm.charging.race.engine.PostActionFromRule$PostActionFromRuleBuilder.build(PostActionFromRule.java:42)
  at com.ericsson.bss.rm.charging.race.engine.internal.rulerunner.impl.RaceDataSet.addPostAction(RaceDataSet.java:92)
  at com.ericsson.bss.rm.charging.vre.tree.elements.modifier.NotificationModifier.executeInternal(NotificationModifier.java:154)
  at com.ericsson.bss.rm.charging.vre.tree.elements.modifier.OptionalTreeModifier.execute(OptionalTreeModifier.java:65)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeTreeElement(TreeTraverser.java:79)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.execute(TreeTraverser.java:56)
  ... 32 more
",
        "No rule found for Billing Account 6260FA8AF7E94CFAA233762A42A72A8B with bucket id CF8AF6AD9D854E57A467E8286F2D60D6",
        "Creating  BillingAccountAsset Using Default Data Model:",
        {
          "CPOP": "c6c5135469dc867f70462c5dca978209",
          "APOP": "e6116d30ec2bd45b28739214a1dedfac",
          "BillingAccount": "6260FA8AF7E94CFAA233762A42A72A8B",
          "BillingAccountBuckets": [
            {
              "BillingAccountId": null,
              "BillingAccountBucketSpecificationId": "1da81516-4e7b-449b-a149-ccf320ea5c41",
              "BillingAccountBucketId": "CF8AF6AD9D854E57A467E8286F2D60D6"
            }
          ]
        },
        "Created Fee, ActionId: 15, Price: 10 usd, AssetId: 6260FA8AF7E94CFAA233762A42A72A8B",
        "Before rate: bucket balance for AssetId[6260FA8AF7E94CFAA233762A42A72A8B] is hard available: 980.000000 usd and soft available: null",
        "ActionId = 15 : Total Fee: 10.000000 usd could be afforded",
        "All fees could be afforded",
        "Created bucket change of 10.000000 for ASSET_BILLING_ACCOUNT, available units considering reservations were 980.000000, available units would now be 970.000000",
        {
          "RaceResult after execute all": {
            "ChargingIntervalPack": null,
            "AreSessionSetupFeesCharged": false,
            "AreSessionStartFeesCharged": true,
            "ActionResultPacks": {
              "SessionStartFeeActionResultPack": {
                "ActionResults": [
                  {
                    "ExecutedAction": "Fee",
                    "RatedUnits": "no rated units",
                    "ChargedUnits": "no charged units",
                    "Cost": "Cost [myBaseCost={\"Value\":10,\"Uom\":\"usd\"}, myDiscountedCost={\"Value\":10,\"Uom\":\"usd\"}]",
                    "NumberOfChargingIntervals": null,
                    "DiscountAction": null,
                    "IsAccumulator": false,
                    "PriceRatingResult": {
                      "AssetId": "6260FA8AF7E94CFAA233762A42A72A8B",
                      "ActionId": "15",
                      "PriceRatingResult": "ALL",
                      "RatingResultReason": "NO_SPECIFIC_REASON"
                    }
                  }
                ]
              }
            },
            "RatedUnits": "[]",
            "ChargedUnits": "null",
            "ResultCode": "SUCCESS",
            "RatingResultReason": "NO_SPECIFIC_REASON",
            "TimeSwitchResult": "has not hit any switch time",
            "FreeResult": null,
            "ChargingResult": null,
            "ApplyingResult": "DefaultApplyingResult [myAssetResults={ActionId=15=com.ericsson.bss.rm.charging.race.engine.internal.applying.impl.DefaultAssetResult@17d52e8d}]",
            "RuleRunnerResult": {
              "Apop": {
                "priceId": "e6116d30ec2bd45b28739214a1dedfac",
                "productPriceId": null,
                "name": "AtomicProductOfferingPrice-e6116d30ec2bd45b28739214a1dedfac",
                "productPriceExternalId": null
              },
              "ActionPack": {
                "SessionSetupFeePack": {
                  "PriceActions": []
                },
                "FixedPricePack": {
                  "PriceActions": [
                    {
                      "Price": "10.000000 usd",
                      "AssetId": "6260FA8AF7E94CFAA233762A42A72A8B",
                      "ImplicitBucket": null,
                      "PriceActionType": "PRICE",
                      "RuleActionTag": {
                        "PricingActionType": "PurchasePrice",
                        "PricingActionId": "be6d2e16a5ee57f893cff92e160c5691",
                        "AmountType": "GROSS"
                      },
                      "ProductType": null,
                      "ActionId": 15,
                      "ExecutedAction": "Fee"
                    }
                  ]
                },
                "LinearPricePack=": {
                  "PriceActions": []
                },
                "FixedDiscount=": null,
                "LinearDiscount=": null,
                "SessionSetupFeeDiscount=": null,
                "AdminChargeDiscount=": null,
                "ChargingIntervalPack=": {
                  "ChargingIntervals": []
                },
                "BucketOperationPack=": {
                  "BucketOperationActions": []
                },
                "NotificationPack=": {
                  "NotificationActions": []
                },
                "PostActionPack=": {
                  "PostActions": []
                }
              },
              "AssetVreIdLimitPack": {
                "AssetConditions": {},
                "AvailableUnitsConditions": {}
              },
              "AssetIdLimitPack": {
                "AssetLimits": {},
                "AvailableUnitsAssetLimits": {}
              },
              "IsApopTriggered": true,
              "IsCpopFound": true,
              "OtherPartyId": null,
              "RuleRunnerExitReason": null
            }
          }
        },
        "APOP: AtomicProductOfferingPrice-e6116d30ec2bd45b28739214a1dedfac (e6116d30ec2bd45b28739214a1dedfac)",
        "
+-- Purchase fee EUN
    +-- Pay fee with EUN
        !-- Payment from BAB
        !-- Send end-user notification
              Warning, notification category not set.
              Adding NotificationCreator to PostActions: {\"PartialNotificationResult\":{\"NotificationTemplateId\":\"172353\",\"ProductId\":null,\"ProductBucketId\":null,\"BillingAccountId\":null,\"BillingAccountBucketId\":null,\"BillingAccountBucketSpecId\":null}}
              com.ericsson.bss.vre.core.treerule.TreeExecutionException: java.lang.ClassCastException: com.ericsson.bss.rm.charging.vre.tree.elements.triggers.NotificationCreator cannot be cast to com.ericsson.bss.rm.charging.vre.tree.elements.triggers.ExternalNotificationCreator
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.execute(TreeTraverser.java:64)
  at com.ericsson.bss.vre.core.treerule.TracingTreeExecutionProxy.execute(TracingTreeExecutionProxy.java:67)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.traverseElement(TreeTraverser.java:43)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeElement(TreeTraverser.java:195)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeNode(TreeTraverser.java:109)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeTreeElement(TreeTraverser.java:74)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.execute(TreeTraverser.java:56)
  at com.ericsson.bss.vre.core.treerule.TracingTreeExecutionProxy.execute(TracingTreeExecutionProxy.java:67)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.traverseElement(TreeTraverser.java:43)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeElement(TreeTraverser.java:195)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeNode(TreeTraverser.java:109)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeTreeElement(TreeTraverser.java:74)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.execute(TreeTraverser.java:56)
  at com.ericsson.bss.vre.core.treerule.TracingTreeExecutionProxy.execute(TracingTreeExecutionProxy.java:67)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.traverseElement(TreeTraverser.java:43)
  at com.ericsson.bss.vre.core.treerule.TreeRule.runRule(TreeRule.java:175)
  at com.ericsson.bss.vre.core.treerule.TreeRule.apply(TreeRule.java:103)
  at com.ericsson.bss.rm.charging.race.engine.internal.rulerunner.impl.ApopUtils.runRuleFor(ApopUtils.java:74)
  at com.ericsson.bss.rm.charging.race.engine.internal.rulerunner.impl.AdminChargeRuleRunner.runRule(AdminChargeRuleRunner.java:62)
  at com.ericsson.bss.rm.charging.race.engine.internal.AdminChargeRace.runRules(AdminChargeRace.java:136)
  at com.ericsson.bss.rm.charging.race.engine.internal.AdminChargeRace.executeAll(AdminChargeRace.java:84)
  at com.ericsson.bss.rm.charging.service.admincharge.adminchargelogic.AbstractAdminChargeStrategy.productExecuteAll(AbstractAdminChargeStrategy.java:293)
  at com.ericsson.bss.rm.charging.service.admincharge.adminchargelogic.AbstractAdminChargeStrategy.executeRemainingBaseProductsAfterAppliedDiscounts(AbstractAdminChargeStrategy.java:277)
  at com.ericsson.bss.rm.charging.service.admincharge.adminchargelogic.AbstractAdminChargeStrategy.executeRace(AbstractAdminChargeStrategy.java:207)
  at com.ericsson.bss.rm.charging.service.admincharge.activity.AdminChargeReserveActivity.reserve(AdminChargeReserveActivity.java:45)
  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
  at java.lang.reflect.Method.invoke(Method.java:498)
  at com.ericsson.bss.rm.charging.rf.core.engine.internal.ExecutionObjectImpl.run(ExecutionObjectImpl.java:254)
  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
  at java.lang.Thread.run(Thread.java:748)
  Caused by: java.lang.ClassCastException: com.ericsson.bss.rm.charging.vre.tree.elements.triggers.NotificationCreator cannot be cast to com.ericsson.bss.rm.charging.vre.tree.elements.triggers.ExternalNotificationCreator
  at com.ericsson.bss.rm.charging.race.engine.internal.rulerunner.api.DefaultPostActionFromRule.<init>(DefaultPostActionFromRule.java:41)
  at com.ericsson.bss.rm.charging.race.engine.PostActionFromRule$PostActionFromRuleBuilder.build(PostActionFromRule.java:42)
  at com.ericsson.bss.rm.charging.race.engine.internal.rulerunner.impl.RaceDataSet.addPostAction(RaceDataSet.java:92)
  at com.ericsson.bss.rm.charging.vre.tree.elements.modifier.NotificationModifier.executeInternal(NotificationModifier.java:154)
  at com.ericsson.bss.rm.charging.vre.tree.elements.modifier.OptionalTreeModifier.execute(OptionalTreeModifier.java:65)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.executeTreeElement(TreeTraverser.java:79)
  at com.ericsson.bss.vre.core.treerule.TreeTraverser.execute(TreeTraverser.java:56)
  ... 32 more
",
        "No rule found for Billing Account 6260FA8AF7E94CFAA233762A42A72A8B with bucket id CF8AF6AD9D854E57A467E8286F2D60D6",
        "Creating  BillingAccountAsset Using Default Data Model:",
        {
          "CPOP": "c6c5135469dc867f70462c5dca978209",
          "APOP": "e6116d30ec2bd45b28739214a1dedfac",
          "BillingAccount": "6260FA8AF7E94CFAA233762A42A72A8B",
          "BillingAccountBuckets": [
            {
              "BillingAccountId": null,
              "BillingAccountBucketSpecificationId": "1da81516-4e7b-449b-a149-ccf320ea5c41",
              "BillingAccountBucketId": "CF8AF6AD9D854E57A467E8286F2D60D6"
            }
          ]
        },
        "Created Fee, ActionId: 17, Price: 10 usd, AssetId: 6260FA8AF7E94CFAA233762A42A72A8B",
        "Before rate: bucket balance for AssetId[6260FA8AF7E94CFAA233762A42A72A8B] is hard available: 970.000000 usd and soft available: null",
        "ActionId = 17 : Total Fee: 10.000000 usd could be afforded",
        "All fees could be afforded",
        "Created bucket change of 10.000000 for ASSET_BILLING_ACCOUNT, available units considering reservations were 970.000000, available units would now be 960.000000",
        {
          "RaceResult after execute all": {
            "ChargingIntervalPack": null,
            "AreSessionSetupFeesCharged": false,
            "AreSessionStartFeesCharged": true,
            "ActionResultPacks": {
              "SessionStartFeeActionResultPack": {
                "ActionResults": [
                  {
                    "ExecutedAction": "Fee",
                    "RatedUnits": "no rated units",
                    "ChargedUnits": "no charged units",
                    "Cost": "Cost [myBaseCost={\"Value\":10,\"Uom\":\"usd\"}, myDiscountedCost={\"Value\":10,\"Uom\":\"usd\"}]",
                    "NumberOfChargingIntervals": null,
                    "DiscountAction": null,
                    "IsAccumulator": false,
                    "PriceRatingResult": {
                      "AssetId": "6260FA8AF7E94CFAA233762A42A72A8B",
                      "ActionId": "17",
                      "PriceRatingResult": "ALL",
                      "RatingResultReason": "NO_SPECIFIC_REASON"
                    }
                  }
                ]
              }
            },
            "RatedUnits": "[]",
            "ChargedUnits": "null",
            "ResultCode": "SUCCESS",
            "RatingResultReason": "NO_SPECIFIC_REASON",
            "TimeSwitchResult": "has not hit any switch time",
            "FreeResult": null,
            "ChargingResult": null,
            "ApplyingResult": "DefaultApplyingResult [myAssetResults={ActionId=17=com.ericsson.bss.rm.charging.race.engine.internal.applying.impl.DefaultAssetResult@3380b2f6}]",
            "RuleRunnerResult": {
              "Apop": {
                "priceId": "e6116d30ec2bd45b28739214a1dedfac",
                "productPriceId": null,
                "name": "AtomicProductOfferingPrice-e6116d30ec2bd45b28739214a1dedfac",
                "productPriceExternalId": null
              },
              "ActionPack": {
                "SessionSetupFeePack": {
                  "PriceActions": []
                },
                "FixedPricePack": {
                  "PriceActions": [
                    {
                      "Price": "10.000000 usd",
                      "AssetId": "6260FA8AF7E94CFAA233762A42A72A8B",
                      "ImplicitBucket": null,
                      "PriceActionType": "PRICE",
                      "RuleActionTag": {
                        "PricingActionType": "PurchasePrice",
                        "PricingActionId": "be6d2e16a5ee57f893cff92e160c5691",
                        "AmountType": "GROSS"
                      },
                      "ProductType": null,
                      "ActionId": 17,
                      "ExecutedAction": "Fee"
                    }
                  ]
                },
                "LinearPricePack=": {
                  "PriceActions": []
                },
                "FixedDiscount=": null,
                "LinearDiscount=": null,
                "SessionSetupFeeDiscount=": null,
                "AdminChargeDiscount=": null,
                "ChargingIntervalPack=": {
                  "ChargingIntervals": []
                },
                "BucketOperationPack=": {
                  "BucketOperationActions": []
                },
                "NotificationPack=": {
                  "NotificationActions": []
                },
                "PostActionPack=": {
                  "PostActions": []
                }
              },
              "AssetVreIdLimitPack": {
                "AssetConditions": {},
                "AvailableUnitsConditions": {}
              },
              "AssetIdLimitPack": {
                "AssetLimits": {},
                "AvailableUnitsAssetLimits": {}
              },
              "IsApopTriggered": true,
              "IsCpopFound": true,
              "OtherPartyId": null,
              "RuleRunnerExitReason": null
            }
          }
        },
        "***************************Context: RESERVE******************************************",
        "***************************Base prices*********************************************************",
        "Product id: 6EB3C30B3B084A2F915233BC955B7A77, base cost: 10.000000 usd ",
        "Product id: C83974B557714ECBB3B663DB0C17D441, base cost: 10.000000 usd ",
        "Product id: 60156A83B5BD4135BFD69689DCBB5194, base cost: 10.000000 usd ",
        "Product id: BE2E284292C542D98E55F5B80478006C, base cost: 10.000000 usd ",
        "***************************Discounted prices***************************************************"
      ],
      "ReturnValue": "NEXT"
    }
  ]
}